CREATE DATABASE ORG;
SHOW DATABASES;
USE ORG;

CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
		(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
		(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
		(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
		(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
		(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
		(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');

CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(001, 5000, '16-02-20'),
		(002, 3000, '16-06-11'),
		(003, 4000, '16-02-20'),
		(001, 4500, '16-02-20'),
		(002, 3500, '16-06-11');
        
CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2016-02-20 00:00:00'),
 (002, 'Executive', '2016-06-11 00:00:00'),
 (008, 'Executive', '2016-06-11 00:00:00'),
 (005, 'Manager', '2016-06-11 00:00:00'),
 (004, 'Asst. Manager', '2016-06-11 00:00:00'),
 (007, 'Executive', '2016-06-11 00:00:00'),
 (006, 'Lead', '2016-06-11 00:00:00'),
 (003, 'Lead', '2016-06-11 00:00:00');
 
show tables;

# Question 1 
select FIRST_NAME as WORKER_NAME from worker;

# Question 2
select upper(FIRST_NAME) from worker;

# Question 3
select distinct DEPARTMENT from worker;

# Question 4
select substring(FIRST_NAME, 1, 3) from worker;

# QUESTION 5
SELECT INSTR(FIRST_NAME, BINARY'a') FROM WORKER WHERE FIRST_NAME = 'Amitabh';

# Question 6
SELECT RTRIM(FIRST_NAME) FROM WORKER;

# QUESTION 7
SELECT LTRIM(DEPARTMENT) FROM WORKER;

# QUESTION 8
SELECT DISTINCT LENGTH(DEPARTMENT) AS DEPARTMENT_COUNT FROM WORKER;

# QUESTION 9
SELECT REPLACE(FIRST_NAME, 'A', 'a') FROM WORKER;

# QUESTION 10
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS COMPLETE_NAME 
FROM WORKER;

#QUESTION 11
SELECT * FROM WORKER
ORDER BY FIRST_NAME ASC;

#QUESTION 12
SELECT * FROM WORKER
ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

# QUESTION 13
SELECT * FROM WORKER 
WHERE FIRST_NAME IN ('Vipul', 'Satish');
 
 # QUESTION 14
 SELECT * FROM WORKER
 WHERE FIRST_NAME NOT IN ('Vipul', 'Satish');
 
 # QUESTION 15
 SELECT * FROM WORKER
 WHERE DEPARTMENT like 'Ad%';
 
 # Question 16
 SELECT * FROM WORKER
 WHERE FIRST_NAME LIKE '%a%';
 
 # Question 17
 SELECT * FROM WORKER
 WHERE FIRST_NAME LIKE "%a";
 
 # Question 18
 SELECT * FROM WORKER 
 WHERE FIRST_NAME LIKE "_____h";
 
 # QUESTION 19
 SELECT * FROM WORKER 
 WHERE SALARY BETWEEN 100000 AND 150000;
 
 # QUESTION 20
 SELECT * FROM WORKER
 WHERE YEAR(JOINING_DATE) = 2014 AND
 MONTH(JOINING_DATE) = 02;
 
 # QUESTION 21
 SELECT COUNT(*) AS EMP_COUNT 
 FROM WORKER
 WHERE DEPARTMENT LIKE 'Admin';
 
 # QUESTION 22
 SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS COMPLETE_NAME
 FROM WORKER
 WHERE WORKER_ID IN 
 (SELECT WORKER_ID FROM WORKER
 WHERE SALARY BETWEEN 50000 AND 100000);
 
 SELECT FIRST_NAME FROM WORKER
 WHERE SALARY BETWEEN 50000 AND 100000;
 
 # QUESTION 23
 SELECT COUNT(*) AS NUM_WORKERS, DEPARTMENT FROM WORKER
 GROUP BY DEPARTMENT
 ORDER BY NUM_WORKERS DESC; 
 
 #QUESTION 24
 SELECT * FROM WORKER 
 INNER JOIN TITLE ON WORKER_ID = WORKER_REF_ID
 WHERE WORKER_TITLE = 'Manager';
 
 # QUESTION 25
SELECT WORKER_TITLE, AFFECTED_FROM, COUNT(*)
FROM TITLE 
group by WORKER_TITLE, AFFECTED_FROM
HAVING COUNT(*) > 1; 
 
 # QUESTINO 26
 SELECT * FROM WORKER WHERE MOD (WORKER_ID, 2) <> 0;
 
 # QUESTION 27
 SELECT * FROM WORKER WHERE MOD(WORKER_ID, 2) = 0;
 
 # QUESTION 28
 DROP TABLE WORKER_CLONE;
 CREATE TABLE WORKER_CLONE AS SELECT * FROM WORKER;
 SELECT * FROM WORKER_CLONE;
 
 # QUESTION 29
 # NOT POSSIBLE WITH MYSQL
 
 USE ORG;
 
 SELECT * FROM WORKER 
 WHERE FIRST_NAME NOT IN (
 SELECT FIRST_NAME FROM WORKER_CLONE);
 
 # QUESTION 31 
 SELECT CURDATE();
 SELECT NOW();
 
 # QUESTION 32 
 
 SELECT * FROM WORKER
 ORDER BY LAST_NAME
 LIMIT 5;
 
 # QUESTION 33
 SELECT * FROM WORKER
 ORDER BY SALARY DESC
 LIMIT 4, 1;
 
 # LIMIT [OFFSET], ROW_COUNT
 
 SELECT * FROM WORKER W1
 WHERE 4 = (
	SELECT COUNT( DISTINCT W2.SALARY )
    FROM WORKER W2
    WHERE W2.SALARY >= W1.SALARY
 );
 
 # Question 34
 
 SELECT * FROM WORKER W1, WORKER W2
 WHERE W1.SALARY = W2.SALARY
 AND W1.WORKER_ID != W2.WORKER_ID;
 
 # QUESTION 35
 SELECT 
    MAX(SALARY)
FROM
    WORKER
WHERE
    SALARY NOT IN (SELECT 
            MAX(SALARY)
        FROM
            WORKER);
 

SELECT FIRST_NAME, DEPARTMENT FROM WORKER W WHERE W.DEPARTMENT = 'HR'
UNION ALL
SELECT FIRST_NAME, DEPARTMENT FROM WORKER W1 WHERE W1.DEPARTMENT = 'HR';

# Question 40

USE ORG;

SELECT 
    COUNT(WORKER_ID) AS WORKER_COUNT, DEPARTMENT
FROM
    WORKER
GROUP BY DEPARTMENT
HAVING COUNT(WORKER_ID) < 5;

# QUESTION 41

SELECT * FROM WORKER
ORDER BY WORKER_ID DESC
LIMIT 1;

# QUESTION 42

SELECT * FROM WORKER
WHERE WORKER_ID = (SELECT MIN(WORKER_ID) FROM WORKER);

SELECT * FROM WORKER
ORDER BY WORKER_ID DESC
LIMIT 5;

SELECT * FROM WORKER WHERE WORKER_ID <=5
UNION
SELECT * FROM ( SELECT * FROM WORKER W ORDER BY W.WORKER_ID DESC ) AS W1 WHERE W1.WORKER_ID <= 5;


# QUESTION 45

SELECT 
    CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME,
    MAX(SALARY),
    DEPARTMENT
FROM
    WORKER
GROUP BY DEPARTMENT;

SELECT * FROM WORKER;

SELECT 
    DEPARTMENT, FIRST_NAME, Salary
FROM
    (SELECT 
        MAX(Salary) AS Salary, DEPARTMENT, FIRST_NAME
    FROM
        Worker
    GROUP BY DEPARTMENT) AS TempNew;
    --     INNER JOIN
--     Worker t ON TempNew.DEPARTMENT = t.DEPARTMENT
--         AND TempNew.TotalSalary = t.Salary;



